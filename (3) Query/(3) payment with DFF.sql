
WITH WITHOUT_DFF_PAY AS
(SELECT  SUM((DIST.AMOUNT/AI.invoice_amount) * PAY.PAY_AMOUNT)  TT_TK --/INVOICE_AMOUNT)  PAY.PAY_AMOUNT) TT_PAID
FROM  AP_INVOICES_ALL AI
    , AP_INVOICE_DISTRIBUTIONS_ALL DIST
    , (SELECT IP.INVOICE_ID, SUM (IP.AMOUNT) PAY_AMOUNT ,IP.ACCOUNTING_DATE
           FROM AP_INVOICE_PAYMENTS_ALL IP
           , AP_CHECKS_ALL CA
           WHERE IP.CHECK_ID = CA.CHECK_ID 
		   AND CA.STATUS_LOOKUP_CODE <> 'VOIDED' 
		   AND NVL(IP.REVERSAL_FLAG, 'N') <> 'Y' 
           GROUP BY IP.INVOICE_ID, 
		            IP.ACCOUNTING_DATE) PAY
    , AP_SUPPLIERS S
    ,  XX_ORG_COMPANY_BRANCH_V       OCB
    ,  GL_CODE_COMBINATIONS          GCC
WHERE AI.INVOICE_ID = DIST.INVOICE_ID
and   DIST.INVOICE_ID = PAY.INVOICE_ID
AND   AI.VENDOR_ID = S.VENDOR_ID
AND DIST.DIST_CODE_COMBINATION_ID = GCC.CODE_COMBINATION_ID
AND (OCB.COMPANY_CODE = GCC.SEGMENT1 AND  OCB.BRANCH_CODE = GCC.SEGMENT2)
AND NVL(DIST.REVERSAL_FLAG,'N') <> 'Y'
AND AI.invoice_amount <> 0
AND   S.VENDOR_TYPE_LOOKUP_CODE = 'EMPLOYEE'
AND   AI.GL_DATE  < NVL(:FROM_DATE, '01-JAN-2019') --AND NVL(:TO_DATE,AI.GL_DATE)
AND   DIST.ACCOUNTING_DATE  < NVL(:FROM_DATE, '01-JAN-2019')
AND   UPPER(SUBSTR(S.VENDOR_NAME, 1, 8)) = NVL(:EMP_NUM, UPPER(SUBSTR(S.VENDOR_NAME, 1, 8)))
     AND   OCB.COMPANY_CODE = NVL(:UNIT, OCB.COMPANY_CODE)),
WITH_DFF_PAY AS
(SELECT SUM ((AID.AMOUNT/A.invoice_amount) * PAY.PAY_AMT ) DFF_PAY
       FROM AP_INVOICE_DISTRIBUTIONS_ALL AID
            ,AP_INVOICES_ALL A
          , HR_EMPLOYEES E
          , (SELECT IP.INVOICE_ID, SUM (IP.AMOUNT) PAY_AMT 
			   FROM AP_INVOICE_PAYMENTS_ALL IP
			   , AP_CHECKS_ALL CA
			   WHERE IP.CHECK_ID = CA.CHECK_ID 
			   AND CA.STATUS_LOOKUP_CODE <> 'VOIDED'
			   AND NVL(IP.REVERSAL_FLAG, 'N') <> 'Y'
			   --AND  IP.ACCOUNTING_DATE  < NVL(:FROM_DATE, IP.ACCOUNTING_DATE) 
			   GROUP BY IP.INVOICE_ID) PAY
          WHERE AID.ATTRIBUTE2 = E.EMPLOYEE_ID
          AND  A.INVOICE_ID = AID.INVOICE_ID
          and   AID.INVOICE_ID = PAY.INVOICE_ID
          AND  NVL(AID.REVERSAL_FLAG,'N') <> 'Y'
          AND   E.EMPLOYEE_NUM = NVL(:EMP_NUM, E.EMPLOYEE_NUM)
          AND   A.GL_DATE  < NVL(:FROM_DATE, '01-JAN-2019')
          AND   AID.ACCOUNTING_DATE  < NVL(:FROM_DATE, '01-JAN-2019')), --AND NVL(:TO_DATE,AID.ACCOUNTING_DATE))
 without_dff (amt) as
(SELECT  SUM(DIST.AMOUNT) amt --/INVOICE_AMOUNT) * PAY.PAY_AMOUNT) TT_PAID
FROM  AP_INVOICES_ALL AI
    , AP_INVOICE_DISTRIBUTIONS_ALL DIST
    , AP_SUPPLIERS S
    , HR_EMPLOYEES E
    ,  XX_ORG_COMPANY_BRANCH_V       OCB
    ,  GL_CODE_COMBINATIONS          GCC
WHERE AI.INVOICE_ID = DIST.INVOICE_ID
AND   AI.VENDOR_ID = S.VENDOR_ID
AND   S.EMPLOYEE_ID = E.EMPLOYEE_ID
AND DIST.DIST_CODE_COMBINATION_ID = GCC.CODE_COMBINATION_ID
AND(OCB.COMPANY_CODE = GCC.SEGMENT1 AND  OCB.BRANCH_CODE = GCC.SEGMENT2)
AND NVL(DIST.REVERSAL_FLAG, 'N') <> 'Y'
AND AI.invoice_amount <> 0
AND   S.VENDOR_TYPE_LOOKUP_CODE = 'EMPLOYEE'
AND   AI.GL_DATE  < NVL(:FROM_DATE, '01-JAN-2019') --AND NVL(:TO_DATE,AI.GL_DATE)
AND   E.EMPLOYEE_NUM = NVL(:EMP_NUM, E.EMPLOYEE_NUM)
     AND   OCB.COMPANY_CODE = NVL(:UNIT, OCB.COMPANY_CODE)),   
with_dff as
(SELECT SUM(AID.AMOUNT) tk
       FROM AP_INVOICE_DISTRIBUTIONS_ALL AID
          , HR_EMPLOYEES E
          WHERE AID.ATTRIBUTE2 = E.EMPLOYEE_ID
          AND  NVL(AID.REVERSAL_FLAG,'N') <> 'Y'
          AND   E.EMPLOYEE_NUM = NVL(:EMP_NUM,E.EMPLOYEE_NUM)
          AND   AID.ACCOUNTING_DATE  < NVL(:FROM_DATE,AID.ACCOUNTING_DATE))
  select TT_TK
  from WITHOUT_DFF_PAY
  UNION
  select DFF_PAY
  from WITH_DFF_PAY
  union 
  select tk
  from with_dff