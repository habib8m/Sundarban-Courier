
--1 --duplicat-payment--
SELECT  AIA.DOC_SEQUENCE_VALUE INV_VOUCHER, count(AIA.DOC_SEQUENCE_VALUE) cnt
  FROM AP_INVOICES_ALL AIA, AP_INVOICE_PAYMENTS_ALL AIP, AP_CHECKS_ALL ACA
 WHERE     AIA.INVOICE_ID = AIP.INVOICE_ID
       AND AIP.CHECK_ID = ACA.CHECK_ID
       AND AIA.CANCELLED_BY IS NULL
       AND NVL (ACA.STATUS_LOOKUP_CODE, 'X') <> 'VOIDED'
     and TRUNC (GL_DATE) >= '01-AUG-2024'
     group by AIA.DOC_SEQUENCE_VALUE
     having count(AIA.DOC_SEQUENCE_VALUE) > 1;


--2 --Miss-Match--AP
   SELECT XX_COM_PKG.GET_HR_OPERATING_UNIT (AI.ORG_ID) UNIT,
         AIP.INVOICE_ID,
         AI.DOC_SEQUENCE_VALUE,
         AI.GL_DATE,
         AI.INVOICE_AMOUNT,
         SUM (AIP.AMOUNT)     DIST_AMOUNT,
         NULL "PAY_AMOUNT",
         XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (AI.CREATED_BY) CREATED_BY
    FROM AP_INVOICES_ALL AI, AP_INVOICE_DISTRIBUTIONS_ALL AIP
   WHERE     AI.INVOICE_ID = AIP.INVOICE_ID
         AND NVL (AIP.REVERSAL_FLAG, 'N') <> 'Y'
		 AND AIP.AMOUNT >0
         AND TRUNC (ACCOUNTING_DATE) >= '01-JUL-2024'
  HAVING AI.INVOICE_AMOUNT <> SUM (AIP.AMOUNT)
GROUP BY AI.ORG_ID,AIP.INVOICE_ID, AI.DOC_SEQUENCE_VALUE,AI.GL_DATE, AI.INVOICE_AMOUNT,AI.CREATED_BY
UNION ALL
  SELECT XX_COM_PKG.GET_HR_OPERATING_UNIT (AI.ORG_ID) UNIT,
         AI.INVOICE_ID,
         AI.DOC_SEQUENCE_VALUE,
         AI.GL_DATE,
         SUM (AI.INVOICE_AMOUNT)     INVOICE_AMOUNT,
         NULL,
         SUM (AIP.AMOUNT)            PAY_AMOUNT,         
         XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (AIP.CREATED_BY) CREATED_BY
    FROM AP_INVOICES_ALL AI, AP_INVOICE_PAYMENTS_ALL AIP
   WHERE     AI.INVOICE_ID = AIP.INVOICE_ID
         AND NVL (AIP.REVERSAL_FLAG, 'N') <> 'Y'
         AND TRUNC (AIP.ACCOUNTING_DATE) >= '01-JUL-2024'
  HAVING SUM (AI.INVOICE_AMOUNT) <> SUM (AIP.AMOUNT)
GROUP BY AI.ORG_ID,AI.INVOICE_ID, AI.DOC_SEQUENCE_VALUE,AI.GL_DATE,AIP.CREATED_BY;


--3 --Wrong Asset Code Entered at AP
SELECT AIA.DOC_SEQUENCE_VALUE                                                 VOUCHER,
       AIA.INVOICE_ID,
       INITCAP(AIA.INVOICE_TYPE_LOOKUP_CODE)                                  INVOICE_TYPE,
       AID.PERIOD_NAME,
       AID.ACCOUNTING_DATE,
       AID.DIST_CODE_COMBINATION_ID                                           WRONG_CCID,
       XX_COM_PKG.GET_CONCAT_CODE_FROM_CCID(AID.DIST_CODE_COMBINATION_ID)     WRONG_CONCAT_CCID,
       NVL(AID.BASE_AMOUNT, AID.AMOUNT)                                       AMOUNT,
       AID.DESCRIPTION,
       AID.POSTED_FLAG
  FROM AP_INVOICES_ALL               AIA,
       AP_INVOICE_DISTRIBUTIONS_ALL  AID,
       AP_SUPPLIERS                  APS,
       GL_CODE_COMBINATIONS          GCC,
       (SELECT DISTINCT ASSET_COST_ACCT, CIP_COST_ACCT
          FROM FA_CATEGORY_BOOKS) FCB
 WHERE     AIA.INVOICE_ID = AID.INVOICE_ID
       AND AIA.VENDOR_ID = APS.VENDOR_ID
       AND AID.DIST_CODE_COMBINATION_ID = GCC.CODE_COMBINATION_ID
       AND NVL(AID.REVERSAL_FLAG, 'N') <> 'Y'
       AND NVL(AID.POSTED_FLAG, 'N') <> 'Y'
       AND AID.ACCOUNTING_DATE >= '01-AUG-2024'
       AND (CASE
                WHEN GCC.SEGMENT4 = FCB.ASSET_COST_ACCT THEN 1
                WHEN GCC.SEGMENT4 = FCB.CIP_COST_ACCT THEN 1
                ELSE 0
            END) =
           1;
		

--4 --Asset-clearing-miss
  SELECT XX_COM_PKG.GET_HR_OPERATING_UNIT (AI.ORG_ID)             UNIT,
         AIP.INVOICE_ID,
         AI.DOC_SEQUENCE_VALUE,
         AI.GL_DATE,
         AI.INVOICE_AMOUNT,
         SUM (AIP.AMOUNT)                                         DIST_AMOUNT,
         XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (AI.CREATED_BY)     CREATED_BY
    FROM AP_INVOICES_ALL             AI,
         AP_INVOICE_DISTRIBUTIONS_ALL AIP,
         GL_CODE_COMBINATIONS        GCD
   WHERE     AI.INVOICE_ID = AIP.INVOICE_ID
         AND GCD.CODE_COMBINATION_ID = AIP.DIST_CODE_COMBINATION_ID
         AND NVL (AIP.REVERSAL_FLAG, 'N') <> 'Y'
         AND GCD.SEGMENT4 = 11490301
         AND AI.INVOICE_AMOUNT = 0
         AND AIP.AMOUNT > 0
         AND TRUNC (ACCOUNTING_DATE) >= '01-AUG-2024'
  HAVING AI.INVOICE_AMOUNT <> SUM (AIP.AMOUNT)
GROUP BY AI.ORG_ID,
         AIP.INVOICE_ID,
         AI.DOC_SEQUENCE_VALUE,
         AI.GL_DATE,
         AI.INVOICE_AMOUNT,
         AI.CREATED_BY;	
		 

--4 --User-Code-entry-err-AP
SELECT     INV.INVOICE_ID,
           AI.DOC_SEQUENCE_VALUE,
           OCB.ORG_ID,
           OCB.PARENT_ORG                               COMPANY,
           GCC.SEGMENT2                                 BRANCH,
           GCC.SEGMENT4                                 ACCOUNT,
           FFV.DESCRIPTION                              ACC_DESCRIPTION,           
           PAY.ACCOUNTING_DATE                          PAY_DATE,
           INV.AMOUNT                                   INV_AMOUNT,
           DST.AMOUNT                                   DST_AMOUNT,
           PAY.AMOUNT                                   PAY_AMOUNT,
           ((PAY.AMOUNT * DST.AMOUNT) / INV.AMOUNT)     PAID_AMOUNT
      -- Invoice Total
      FROM (  SELECT AID.ORG_ID, AID.INVOICE_ID, SUM(AID.AMOUNT) AMOUNT
                FROM AP_INVOICE_DISTRIBUTIONS_ALL AID
               WHERE NVL(AID.REVERSAL_FLAG, 'N') <> 'Y'
              HAVING SUM(AID.AMOUNT) <> 0
            GROUP BY AID.ORG_ID, AID.INVOICE_ID) INV,
           -- Invoice Line
           (SELECT AID.INVOICE_ID, AID.DIST_CODE_COMBINATION_ID, AID.AMOUNT
              FROM AP_INVOICE_DISTRIBUTIONS_ALL AID
             WHERE NVL(AID.REVERSAL_FLAG, 'N') <> 'Y') DST,
           -- Payment
           (  SELECT AIP.INVOICE_ID, AIP.ACCOUNTING_DATE, SUM(AIP.AMOUNT) AMOUNT
                FROM AP_INVOICE_PAYMENTS_ALL AIP
               WHERE NVL(AIP.REVERSAL_FLAG, 'N') <> 'Y'
               AND AIP.ACCOUNTING_DATE >='01-AUG-2024'
            GROUP BY AIP.INVOICE_ID, AIP.ACCOUNTING_DATE) PAY,
           -- Other Sources
           XX_ORG_COMPANY_BRANCH_V  OCB,
           GL_CODE_COMBINATIONS     GCC,
           FND_FLEX_VALUES_VL       FFV,
           AP_INVOICES_ALL          AI
     WHERE     INV.INVOICE_ID = DST.INVOICE_ID
           AND DST.INVOICE_ID = PAY.INVOICE_ID
           AND INV.ORG_ID = OCB.ORG_ID
           AND INV.INVOICE_ID = AI.INVOICE_ID
           AND DST.DIST_CODE_COMBINATION_ID = GCC.CODE_COMBINATION_ID
           AND GCC.SEGMENT4 = FFV.FLEX_VALUE
           AND FFV.FLEX_VALUE_SET_ID = 1016494
           and GCC.SEGMENT4 like '4%'; -- '1%', '2%'


--5 --999-Branch check-- --PST- OFF
       SELECT OCB.PARENT_ORG COMPANY,
                   GCC.SEGMENT2 BRANCH,
                   GCC.SEGMENT4 ACCOUNT,
                  -- TRUNC (AIP.ACCOUNTING_DATE),
                   AIA.DOC_SEQUENCE_VALUE,
                   FFV.DESCRIPTION ACC_DESCRIPTION,
                   NVL (AID.BASE_AMOUNT, AMOUNT) AMOUNT
              FROM XX_ORG_COMPANY_BRANCH_V OCB,
                   AP_INVOICES_ALL AIA,
                   AP_INVOICE_DISTRIBUTIONS_ALL AID,
                   GL_CODE_COMBINATIONS GCC,
                   FND_FLEX_VALUES_VL FFV
             WHERE     OCB.ORG_ID = AIA.ORG_ID
                   AND AIA.INVOICE_ID = AID.INVOICE_ID
                   AND AID.DIST_CODE_COMBINATION_ID = GCC.CODE_COMBINATION_ID
                   AND GCC.SEGMENT4 = FFV.FLEX_VALUE
                   AND CANCELLED_DATE IS NULL
                   AND NVL (AID.REVERSAL_FLAG, 'N') <> 'Y'
                   AND FFV.FLEX_VALUE_SET_ID = 1016494
                   AND GCC.SEGMENT2='999'
                   AND EXISTS
                          (SELECT 1
                             FROM AP_INVOICE_PAYMENTS_ALL AIP
                            WHERE     AIA.INVOICE_ID = AIP.INVOICE_ID
                                  AND NVL (AIP.REVERSAL_FLAG, 'N') <> 'Y'
                                  AND TRUNC (AIP.ACCOUNTING_DATE)>='01-AUG-2024');
						  

--6 --**--Miss-Date--Apply
SELECT XX_COM_PKG.GET_HR_OPERATING_UNIT (ORG_ID)     UNIT,
       INVOICE_ID,
       INVOICE_AMOUNT,
       DOC_SEQUENCE_VALUE,
       GL_DATE
  FROM AP_INVOICES_ALL
 WHERE INVOICE_ID IN
           (SELECT INVOICE_ID
              FROM AP_INVOICE_DISTRIBUTIONS_ALL
             WHERE     ACCOUNTING_EVENT_ID IN
                           (SELECT EVENT_ID
                              FROM XLA_EVENTS
                             WHERE NVL (PROCESS_STATUS_CODE, 'X') <> 'P')
                   AND REVERSAL_FLAG <> 'Y'
                   AND INVOICE_ID IN
                           (SELECT INVOICE_ID
                              FROM AP_INVOICES_ALL
                             WHERE     CANCELLED_DATE IS NULL
                            AND GL_DATE BETWEEN '01-AUG-2024' AND '31-AUG-2024')
                   AND ACCOUNTING_DATE NOT BETWEEN '01-AUG-2024' AND '31-AUG-2024');  


--7 --*--Miss-gl-date
SELECT XX_COM_PKG.GET_HR_OPERATING_UNIT (A.ORG_ID) UNIT,
A.INVOICE_ID,
A.DOC_SEQUENCE_VALUE,
A.GL_DATE, 
B.ACCOUNTING_DATE LINE_DATE, 
C.ACCOUNTING_DATE DIS_DATE
FROM AP_INVOICES_ALL A, 
AP_INVOICE_LINES_ALL B, 
AP_INVOICE_DISTRIBUTIONS_ALL C
WHERE A.INVOICE_ID=B.INVOICE_ID
AND A.INVOICE_ID=C.INVOICE_ID
AND A.INVOICE_AMOUNT<>0  ---new add-05-03-24
AND A.GL_DATE BETWEEN '01-JUL-2024' AND '31-AUG-2024'
AND ( A.GL_DATE <> B.ACCOUNTING_DATE OR A.GL_DATE <> C.ACCOUNTING_DATE)
AND (CASE WHEN NVL (C.POSTED_FLAG, 'N') = 'Y' THEN 'Yes' ELSE 'No' END)='No'
AND C.PERIOD_NAME <> 'AUG-24';


--8 --miss-date
SELECT AIA.INVOICE_ID,
DOC_SEQUENCE_VALUE,
XX_AP_PKG.GET_VENDOR_NAME_WITH_NUMBER (AIA.VENDOR_ID) SUPPLIER,
INVOICE_NUM,
INVOICE_DATE,
GL_DATE,
AIP.ACCOUNTING_DATE PAY_DATE,
INVOICE_AMOUNT,
XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID(AIA.CREATED_BY) CREATED,
(CASE WHEN NVL (AID.POSTED_FLAG, 'N') = 'Y' THEN 'Yes' ELSE 'No' END) POSTING_STATUS
FROM AP_INVOICES_ALL AIA, 
AP_INVOICE_PAYMENTS_ALL AIP,
AP_INVOICE_DISTRIBUTIONS_ALL AID
WHERE INVOICE_DATE <> GL_DATE
AND TRUNC(GL_DATE) >='01-AUG-2024'
AND CANCELLED_DATE IS NULL
AND AIA.INVOICE_ID = AIP.INVOICE_ID
AND AIA.INVOICE_ID = AID.INVOICE_ID
AND SUBSTR(INVOICE_DATE,4) <> SUBSTR(GL_DATE,4)
AND (CASE WHEN NVL (AID.POSTED_FLAG, 'N') = 'Y' THEN 'Yes' ELSE 'No' END)='No';


--9 --Invoice-Gl-Dist-Date-mitchmatch
SELECT AIA.INVOICE_ID,
       DOC_SEQUENCE_VALUE,
       XX_COM_PKG.GET_HR_OPERATING_UNIT (AIA.ORG_ID) UNIT,
       XX_AP_PKG.GET_VENDOR_NAME_WITH_NUMBER (AIA.VENDOR_ID)                    SUPPLIER,
       INVOICE_NUM,
       INVOICE_DATE,
       GL_DATE,
       AIP.ACCOUNTING_DATE                                                      LIN_DATE,
       AID.ACCOUNTING_DATE                                                      DIS_DATE,
       INVOICE_AMOUNT,
       XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (AIA.CREATED_BY)                    CREATED,
       (CASE WHEN NVL (AID.POSTED_FLAG, 'N') = 'Y' THEN 'Yes' ELSE 'No' END)    POSTING_STATUS
  FROM AP_INVOICES_ALL               AIA,
       AP_INVOICE_LINES_ALL       AIP,
       AP_INVOICE_DISTRIBUTIONS_ALL  AID
 WHERE        AIA.INVOICE_ID = AIP.INVOICE_ID
          AND AIA.INVOICE_ID = AID.INVOICE_ID
          AND AIA.ORG_ID NOT IN (
                             SELECT ORG_ID
                             FROM XX_ORG_COMPANY_BRANCH_V
                             WHERE BRANCH_CODE IN ('DHK', 'KLP','HKG'))          
          AND TRUNC(AIA.GL_DATE) >='01-JUL-2024'
          AND (SUBSTR(AIA.INVOICE_DATE,4) <> SUBSTR(AIA.GL_DATE,4)
       OR SUBSTR(AIA.GL_DATE,4) <> SUBSTR(AID.ACCOUNTING_DATE,4)
       OR SUBSTR(AIP.ACCOUNTING_DATE,4) <> SUBSTR(AID.ACCOUNTING_DATE,4));
	

	
--prepay--

--10 --GL_Date <> Pay_Date
SELECT AIV.INVOICE_ID,
       XX_COM_PKG.GET_HR_OPERATING_UNIT (AIV.ORG_ID) UNIT,
       AIV.DOC_SEQUENCE_VALUE,
       AIV.GL_DATE,
       APL.ACCOUNTING_DATE PAY_DATE,
       AIV.INVOICE_AMOUNT,
       XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (AIV.CREATED_BY) CREATED_BY
  FROM AP_INVOICES_ALL AIV, 
       AP.AP_CHECKS_ALL APH, 
	   AP_INVOICE_PAYMENTS_ALL APL
 WHERE     AIV.INVOICE_ID = APL.INVOICE_ID
       AND APH.CHECK_ID = APL.CHECK_ID
       AND AIV.INVOICE_TYPE_LOOKUP_CODE = 'PREPAYMENT'
       AND SUBSTR (UPPER (TO_CHAR (TO_DATE ( AIV.GL_DATE, 'DD-MON-YY'))), 4) <> SUBSTR (UPPER (TO_CHAR (TO_DATE ( APL.ACCOUNTING_DATE, 'DD-MON-YY'))), 4)
	   AND NVL(APL.REVERSAL_FLAG,'X') <>'Y'
       AND TRUNC(AIV.GL_DATE) between '01-AUG-2024' and '31-AUG-2024';	   
	   
	   
       
--11 --GL_Date > Pay_Date
SELECT AIV.INVOICE_ID,
       XX_COM_PKG.GET_HR_OPERATING_UNIT (AIV.ORG_ID) UNIT,
       AIV.DOC_SEQUENCE_VALUE,
       AIV.GL_DATE,
       APL.ACCOUNTING_DATE PAY_DATE,
       AIV.INVOICE_AMOUNT,
       XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (AIV.CREATED_BY) CREATED_BY
  FROM AP_INVOICES_ALL AIV, AP.AP_CHECKS_ALL APH, AP_INVOICE_PAYMENTS_ALL APL
 WHERE     AIV.INVOICE_ID = APL.INVOICE_ID
       AND APH.CHECK_ID = APL.CHECK_ID
       AND AIV.GL_DATE > APL.ACCOUNTING_DATE
	   AND NVL(APL.REVERSAL_FLAG,'X') <>'Y'
       AND TRUNC(AIV.GL_DATE) >='01-AUG-2024'; 
       
       
--12---Loan-Susp-STD--
  SELECT A.INVOICE_ID,
         A.DOC_SEQUENCE_VALUE,
         A.GL_DATE, 
         C.ACCOUNTING_DATE DIS_DATE,
         SUM (NVL(C.AMOUNT,0)) AMOUNT
    FROM AP_INVOICES_ALL A,
         AP_INVOICE_DISTRIBUTIONS_ALL C,
         GL_CODE_COMBINATIONS D
   WHERE     A.INVOICE_ID = C.INVOICE_ID
         AND C.DIST_CODE_COMBINATION_ID = D.CODE_COMBINATION_ID
         AND TRUNC(A.GL_DATE) >='01-AUG-2024'
         AND A.CANCELLED_DATE IS NULL
         AND D.SEGMENT4 IN (11490501, 12030121)
         AND INVOICE_TYPE_LOOKUP_CODE = 'STANDARD'
  HAVING SUM (NVL(C.AMOUNT,0)) > 0
GROUP BY A.INVOICE_ID,
         A.DOC_SEQUENCE_VALUE,
         A.GL_DATE,
         C.ACCOUNTING_DATE;

		 
---13-wrong-Prepayment-code
  SELECT A.INVOICE_ID,
         A.DOC_SEQUENCE_VALUE,
         A.GL_DATE, 
         C.ACCOUNTING_DATE DIS_DATE,
         SUM (NVL(C.AMOUNT,0)) AMOUNT,
         XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (A.CREATED_BY) CREATED_BY
    FROM AP_INVOICES_ALL A,
         AP_INVOICE_DISTRIBUTIONS_ALL C,
         GL_CODE_COMBINATIONS D
   WHERE     A.INVOICE_ID = C.INVOICE_ID
         AND C.DIST_CODE_COMBINATION_ID = D.CODE_COMBINATION_ID
         AND TRUNC(A.GL_DATE) >='01-AUG-2024'
         AND A.CANCELLED_DATE IS NULL
         AND D.SEGMENT4 like '5%' -- '2%', '3%', '4%'
         AND INVOICE_TYPE_LOOKUP_CODE <> 'STANDARD'
  HAVING SUM (NVL(C.AMOUNT,0)) > 0
GROUP BY A.INVOICE_ID,
         A.DOC_SEQUENCE_VALUE,
         A.GL_DATE,
         C.ACCOUNTING_DATE,
         A.CREATED_BY;

---14---180923---
SELECT XX_COM_PKG.GET_HR_OPERATING_UNIT (AIA.ORG_ID) UNIT,
       XX_AP_PKG.GET_VENDOR_NAME_WITH_NUMBER (AIA.VENDOR_ID) SUPPLIER,
       AIA.GL_DATE,
       AIA.DOC_SEQUENCE_VALUE,
       AIA.INVOICE_ID,
       GCD.SEGMENT4 ACCOUNT,
       FLX.DESCRIPTION ACC_DESCRIPTION,
       XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (APD.CREATED_BY) CREATED_BY
  FROM AP_INVOICES_ALL               AIA,
       AP_INVOICE_DISTRIBUTIONS_ALL  APD,
       GL_CODE_COMBINATIONS          GCD,
       (SELECT TO_NUMBER (FLEX_VALUE) FLEX_VALUE, DESCRIPTION
          FROM FND_FLEX_VALUES_VL
         WHERE FLEX_VALUE_SET_ID = 1016494) FLX
 WHERE     AIA.INVOICE_ID = APD.INVOICE_ID
       AND GCD.CODE_COMBINATION_ID = APD.DIST_CODE_COMBINATION_ID
       AND GCD.SEGMENT4 = FLX.FLEX_VALUE
       AND AIA.INVOICE_TYPE_LOOKUP_CODE = 'PREPAYMENT'
       AND AIA.CANCELLED_BY IS NULL
       AND NVL (APD.REVERSAL_FLAG, 'N') <> 'Y'
       AND GCD.SEGMENT4 NOT IN (12030102,12030301,11490501,12030121,12030302)
       AND AIA.NET_OF_RETAINAGE_FLAG='N'
       AND AIA.GL_DATE >='01-AUG-2024';	 


---15-User-Code-entry-err---AP---Dep--------------
SELECT     INV.INVOICE_ID,
           AI.DOC_SEQUENCE_VALUE,
           OCB.ORG_ID,
           OCB.PARENT_ORG                               COMPANY,
           GCC.SEGMENT2                                 BRANCH,
           GCC.SEGMENT4                                 ACCOUNT,
           FFV.DESCRIPTION                              ACC_DESCRIPTION,           
           PAY.ACCOUNTING_DATE                          PAY_DATE,
           INV.AMOUNT                                   INV_AMOUNT,
           DST.AMOUNT                                   DST_AMOUNT,
           PAY.AMOUNT                                   PAY_AMOUNT,
           ((PAY.AMOUNT * DST.AMOUNT) / INV.AMOUNT)     PAID_AMOUNT
      -- Invoice Total
      FROM (  SELECT AID.ORG_ID, AID.INVOICE_ID, SUM(AID.AMOUNT) AMOUNT
                FROM AP_INVOICE_DISTRIBUTIONS_ALL AID
               WHERE NVL(AID.REVERSAL_FLAG, 'N') <> 'Y'
              HAVING SUM(AID.AMOUNT) <> 0
            GROUP BY AID.ORG_ID, AID.INVOICE_ID) INV,
           -- Invoice Line
           (SELECT AID.INVOICE_ID, AID.DIST_CODE_COMBINATION_ID, AID.AMOUNT
              FROM AP_INVOICE_DISTRIBUTIONS_ALL AID
             WHERE NVL(AID.REVERSAL_FLAG, 'N') <> 'Y') DST,
           -- Payment
           (  SELECT AIP.INVOICE_ID, AIP.ACCOUNTING_DATE, SUM(AIP.AMOUNT) AMOUNT
                FROM AP_INVOICE_PAYMENTS_ALL AIP
               WHERE NVL(AIP.REVERSAL_FLAG, 'N') <> 'Y'
               AND AIP.ACCOUNTING_DATE >='01-AUG-2024'
            GROUP BY AIP.INVOICE_ID, AIP.ACCOUNTING_DATE) PAY,
           -- Other Sources
           XX_ORG_COMPANY_BRANCH_V  OCB,
           GL_CODE_COMBINATIONS     GCC,
           FND_FLEX_VALUES_VL       FFV,
           AP_INVOICES_ALL          AI
     WHERE     INV.INVOICE_ID = DST.INVOICE_ID
           AND DST.INVOICE_ID = PAY.INVOICE_ID
           AND INV.ORG_ID = OCB.ORG_ID
           AND INV.INVOICE_ID = AI.INVOICE_ID
           AND DST.DIST_CODE_COMBINATION_ID = GCC.CODE_COMBINATION_ID
           AND GCC.SEGMENT4 = FFV.FLEX_VALUE
           AND FFV.FLEX_VALUE_SET_ID = 1016494
           and GCC.SEGMENT4 like '5%'
           AND FFV.DESCRIPTION like '%Depreciation%';

         
---16--AR-Date-Miss--
SELECT DOC_SEQUENCE_VALUE,
       TRX_DATE,
       GL_DATE,
       TERM_DUE_DATE
  FROM RA_CUSTOMER_TRX_ALL RCT, RA_CUST_TRX_LINE_GL_DIST_ALL LGD
 WHERE     RCT.CUSTOMER_TRX_ID = LGD.CUSTOMER_TRX_ID
       AND TRUNC (TRX_DATE) <> TRUNC (GL_DATE)
       AND TRUNC (TRX_DATE) >= '01-AUG-2024';
	   
----17--AR-Collection-Date-Miss--
SELECT ARA.CASH_RECEIPT_ID,
       ARA.TRX_DATE,
       ARA.GL_DATE,
       ARA.REVERSAL_GL_DATE,
       ARCH.AMOUNT,
       ARCH.RECEIPT_NUMBER,
       ARCH.RECEIPT_DATE,
       ARCH.DOC_SEQUENCE_VALUE,
       XX_COM_PKG.GET_EMP_NAME_FROM_USER_ID (ARCH.CREATED_BY) CREATED_BY,
       ARCH.CREATION_DATE
  FROM AR_CASH_RECEIPT_HISTORY_ALL ARA, AR_CASH_RECEIPTS_ALL ARCH
 WHERE ARA.CASH_RECEIPT_ID = ARCH.CASH_RECEIPT_ID
 and ARA.TRX_DATE <> ARA.GL_DATE
 and ARA.TRX_DATE >='01-AUG-2024';	
 
 
---18---Financial-exp-err---AP-----------------
   SELECT C.ORG_ID,XX_COM_PKG.GET_HR_OPERATING_UNIT (C.ORG_ID) UNIT,
         A.INVOICE_ID,
         A.DOC_SEQUENCE_VALUE,
         A.GL_DATE, 
         C.ACCOUNTING_DATE DIS_DATE,
         C.DIST_CODE_COMBINATION_ID,
         SUM (NVL(C.AMOUNT,0)) AMOUNT
    FROM AP_INVOICES_ALL A,
         AP_INVOICE_DISTRIBUTIONS_ALL C,
         GL_CODE_COMBINATIONS D
   WHERE     A.INVOICE_ID = C.INVOICE_ID
         AND C.DIST_CODE_COMBINATION_ID = D.CODE_COMBINATION_ID
         AND TRUNC(A.GL_DATE) >='01-AUG-2024'
         AND A.CANCELLED_DATE IS NULL
         AND D.SEGMENT4 NOT IN (52050101,52050111,52050121,52050201,52050301)
         AND D.SEGMENT5=60
         AND INVOICE_TYPE_LOOKUP_CODE = 'STANDARD'
        -- and D.SEGMENT2='HGJ'
  HAVING SUM (NVL(C.AMOUNT,0)) > 0
GROUP BY C.ORG_ID,
A.INVOICE_ID,
         A.DOC_SEQUENCE_VALUE,
         A.GL_DATE,
         C.ACCOUNTING_DATE,
         C.DIST_CODE_COMBINATION_ID;
		 
		 
SELECT * FROM AP_CHECKS_ALL
WHERE CHECK_NUMBER=-1;	   


---19--Vehicle-err-
SELECT EMPLOYEE_NUMBER,
       EMPLOYEE_NAME,
       ASS_ID,
       VEHICLE_NO
  FROM XX_VEHICLE, XX_EMPLOYEE_INFO_V
 WHERE EMPLOYEE_NUMBER = ASS_ID AND EMPLOYEE_NAME <> VEHICLE_NO;